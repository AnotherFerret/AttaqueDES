Le principe de l'attaque par faute est d'injecter une erreur dans le système de chiffrement afin d'en perturber le fonctionnement et d'obtenir un chiffré en sortie différent du chiffré d'origine.
Cette erreur notée "e" consiste à changer la valeur d'un bit. En comparant ainsi le chiffré d'origine et le chiffré faux, il est possible d'obtenir des informations sur la clé.

Voici le schéma de l'attaque : 

[schéma.png]

Nous avons donc
	C = R16 || R15 
	  = L15+f(R15) || R15 
	  
	C' = R16+e' || R15+e 
	   = L15 + f(R15+e) || R15+e
	
	d'ou
		L15 + P(S(E(R15+e)+K16)) = R16 + e'
		<=> P(S(E(R15+e)+K16)) = R16+L15+e'
		<=> E(R15+e)+K16 = S^-1(P^-1(R16+l15+e'))
		<=> K16 = S^-1(P^-1(R16+L15+e')) + E^-1(R15+e)
		
	Ici, on remarque qu'on connait toutes les valeurs sauf L15 et K16
	Or, L15 étant dans la fonction P^-1, il mesure 32 bits, on peut le retrouver par une recherche exhaustive sur 32 bits
		->générer 2^32 candidats en faisant R16+L15+e' avec toutes les possibilités pour L15
		->les passer dans P, puis S, puis additionner à E(R15+e)
		->générer 2^32 clés candidates
		->
	Ce qui permet de retrouver K16
	Ce qui permet de retrouver K
	[élaborer sur K]
	
	
	
	clair :	1101111101010001100011001110110010111111011000011110001111011001
	
	vrai : 	1000011110001100111101101001001111001000011111101100000001111001
	faux : 	1000010110011101111101101101011111001000011111111100000001111101
